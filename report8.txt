//완성
//server.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORTNUM 9002
#define BUF_SIZE 256

int main() {
    int sockfd;
    struct sockaddr_in server_addr, client_addr;
    char buf[BUF_SIZE];
    socklen_t client_len = sizeof(client_addr);

    // 소켓 생성
    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("socket");
        exit(1);
    }

    // 서버 주소 설정
    memset(&server_addr, 0, sizeof(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = INADDR_ANY;
    server_addr.sin_port = htons(PORTNUM);

    // 바인드
    if (bind(sockfd, (struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) {
        perror("bind");
        exit(1);
    }

    printf("서버가 시작되었습니다. 클라이언트를 기다립니다...\n");

    while (1) {
        int num;
        // 클라이언트로부터 데이터 수신
        recvfrom(sockfd, &num, sizeof(num), 0, (struct sockaddr *)&client_addr, &client_len);
        printf("클라이언트로부터 받은 정수: %d\n", num);

        // 1초 대기
        sleep(1);

        // 홀수/짝수 판단
        const char *result = (num % 2 == 0) ? "짝수입니다." : "홀수입니다.";

        // 결과 전송
        sendto(sockfd, result, strlen(result) + 1, 0, (struct sockaddr *)&client_addr, client_len);
    }

    close(sockfd);
    return 0;
}

//client.c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORTNUM 9002
#define BUF_SIZE 256

int main() {
    int sockfd;
    struct sockaddr_in server_addr;
    char buf[BUF_SIZE];
    int num;

    // 소켓 생성
    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("socket");
        exit(1);
    }

    // 서버 주소 설정
    memset(&server_addr, 0, sizeof(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
    server_addr.sin_port = htons(PORTNUM);

    for(int i = 0;i<2;i++) {
        // 사용자로부터 정수 입력
        printf("정수를 입력하세요 (종료하려면 -1 입력): ");
        scanf("%d", &num);

        if (num == -1) {
            break; // -1 입력 시 종료
        }

        // 서버에 정수 전송
        sendto(sockfd, &num, sizeof(num), 0, (struct sockaddr *)&server_addr, sizeof(server_addr));

        // 서버로부터 결과 수신
        recvfrom(sockfd, buf, BUF_SIZE, 0, NULL, NULL);
        printf("서버의 응답: %s\n", buf);
    }

    close(sockfd);
    return 0;
}

